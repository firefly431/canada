digraph parse_tree {
    node [shape = box];
    node0 [label = "program"]
    node0 -> node1
    node0 -> node2
    node0 -> node3
    node0 -> node4
    node0 -> node5
    node1 [label = "extern"]
    node1 -> node6
    node1 -> node7
    node1 -> node8
    node6 [label = "void", shape = "diamond"]
    node7 [label = "print_int", shape = "diamond"]
    node8 [label = "['n']", shape = "diamond"]
    node2 [label = "extern_c_var"]
    node2 -> node9
    node2 -> node10
    node9 [label = "PRIM_TYPE"]
    node9 -> node11
    node11 [label = "int", shape = "diamond"]
    node10 [label = "my_int", shape = "diamond"]
    node3 [label = "extern_c"]
    node3 -> node12
    node3 -> node13
    node3 -> node14
    node12 [label = "PRIM_TYPE"]
    node12 -> node15
    node15 [label = "int", shape = "diamond"]
    node13 [label = "puts", shape = "diamond"]
    node14 [label = "['str']", shape = "diamond"]
    node4 [label = "extern_c"]
    node4 -> node16
    node4 -> node17
    node4 -> node18
    node16 [label = "PRIM_TYPE"]
    node16 -> node19
    node19 [label = "int", shape = "diamond"]
    node17 [label = "printf", shape = "diamond"]
    node18 [label = "['str']", shape = "diamond"]
    node5 [label = "function"]
    node5 -> node20
    node5 -> node21
    node5 -> node22
    node5 -> node23
    node20 [label = "void", shape = "diamond"]
    node21 [label = "main", shape = "diamond"]
    node22 [label = "par_list"]
    node22 -> node24
    node22 -> node25
    node24 [label = "argc", shape = "diamond"]
    node25 [label = "argv", shape = "diamond"]
    node23 [label = "block"]
    node23 -> node26
    node23 -> node27
    node23 -> node28
    node23 -> node29
    node23 -> node30
    node23 -> node31
    node23 -> node32
    node26 [label = "var_decl"]
    node26 -> node33
    node26 -> node34
    node33 [label = "PRIM_TYPE"]
    node33 -> node35
    node35 [label = "int", shape = "diamond"]
    node34 [label = "a", shape = "diamond"]
    node27 [label = "bin_expr"]
    node27 -> node36
    node27 -> node37
    node27 -> node38
    node36 [label = "=", shape = "diamond"]
    node37 [label = "IDENT"]
    node37 -> node39
    node39 [label = "a", shape = "diamond"]
    node38 [label = "IDENT"]
    node38 -> node40
    node40 [label = "argc", shape = "diamond"]
    node28 [label = "function_call"]
    node28 -> node41
    node28 -> node42
    node41 [label = "print_int", shape = "diamond"]
    node42 [label = "arg_list"]
    node42 -> node43
    node43 [label = "IDENT"]
    node43 -> node44
    node44 [label = "my_int", shape = "diamond"]
    node29 [label = "function_call"]
    node29 -> node45
    node29 -> node46
    node45 [label = "puts", shape = "diamond"]
    node46 [label = "arg_list"]
    node46 -> node47
    node47 [label = "STRING_LIT"]
    node47 -> node48
    node48 [label = "hello, world!\\0", shape = "diamond"]
    node30 [label = "if_stmt"]
    node30 -> node49
    node30 -> node50
    node30 -> node51
    node49 [label = "bin_expr"]
    node49 -> node52
    node49 -> node53
    node49 -> node54
    node52 [label = "==", shape = "diamond"]
    node53 [label = "IDENT"]
    node53 -> node55
    node55 [label = "argc", shape = "diamond"]
    node54 [label = "INT_LIT"]
    node54 -> node56
    node56 [label = "2", shape = "diamond"]
    node50 [label = "function_call"]
    node50 -> node57
    node50 -> node58
    node57 [label = "puts", shape = "diamond"]
    node58 [label = "arg_list"]
    node58 -> node59
    node59 [label = "STRING_LIT"]
    node59 -> node60
    node60 [label = "We have 1 argument.\\0", shape = "diamond"]
    node51 [label = "function_call"]
    node51 -> node61
    node51 -> node62
    node61 [label = "printf", shape = "diamond"]
    node62 [label = "arg_list"]
    node62 -> node63
    node62 -> node64
    node63 [label = "STRING_LIT"]
    node63 -> node65
    node65 [label = "We have %d arguments.\\n\\0", shape = "diamond"]
    node64 [label = "bin_expr"]
    node64 -> node66
    node64 -> node67
    node64 -> node68
    node66 [label = "-", shape = "diamond"]
    node67 [label = "IDENT"]
    node67 -> node69
    node69 [label = "argc", shape = "diamond"]
    node68 [label = "INT_LIT"]
    node68 -> node70
    node70 [label = "1", shape = "diamond"]
    node31 [label = "if_stmt"]
    node31 -> node71
    node31 -> node72
    node71 [label = "bin_expr"]
    node71 -> node73
    node71 -> node74
    node71 -> node75
    node73 [label = ">", shape = "diamond"]
    node74 [label = "IDENT"]
    node74 -> node76
    node76 [label = "argc", shape = "diamond"]
    node75 [label = "INT_LIT"]
    node75 -> node77
    node77 [label = "0", shape = "diamond"]
    node72 [label = "block"]
    node72 -> node78
    node72 -> node79
    node78 [label = "bin_expr"]
    node78 -> node80
    node78 -> node81
    node78 -> node82
    node80 [label = "=", shape = "diamond"]
    node81 [label = "IDENT"]
    node81 -> node83
    node83 [label = "argc", shape = "diamond"]
    node82 [label = "bin_expr"]
    node82 -> node84
    node82 -> node85
    node82 -> node86
    node84 [label = "-", shape = "diamond"]
    node85 [label = "IDENT"]
    node85 -> node87
    node87 [label = "argc", shape = "diamond"]
    node86 [label = "INT_LIT"]
    node86 -> node88
    node88 [label = "1", shape = "diamond"]
    node79 [label = "function_call"]
    node79 -> node89
    node79 -> node90
    node89 [label = "puts", shape = "diamond"]
    node90 [label = "arg_list"]
    node90 -> node91
    node91 [label = "deref"]
    node91 -> node92
    node91 -> node93
    node92 [label = "*", shape = "diamond"]
    node93 [label = "bin_expr"]
    node93 -> node94
    node93 -> node95
    node93 -> node96
    node94 [label = "+", shape = "diamond"]
    node95 [label = "IDENT"]
    node95 -> node97
    node97 [label = "argv", shape = "diamond"]
    node96 [label = "bin_expr"]
    node96 -> node98
    node96 -> node99
    node96 -> node100
    node98 [label = "*", shape = "diamond"]
    node99 [label = "IDENT"]
    node99 -> node101
    node101 [label = "argc", shape = "diamond"]
    node100 [label = "INT_LIT"]
    node100 -> node102
    node102 [label = "4", shape = "diamond"]
    node32 [label = "return"]
    node32 -> node103
    node103 [label = "bin_expr"]
    node103 -> node104
    node103 -> node105
    node103 -> node106
    node104 [label = "-", shape = "diamond"]
    node105 [label = "IDENT"]
    node105 -> node107
    node107 [label = "a", shape = "diamond"]
    node106 [label = "INT_LIT"]
    node106 -> node108
    node108 [label = "1", shape = "diamond"]
}
