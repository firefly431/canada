/*
 * I/O functions:
 *
 * (char * is equivalent to an int)
 *
 * int $open(char *name, int flags, int mode);
 * syscall 5
 *
 * void $close(int fd);
 * syscall 6
 *
 * int $read(int fd, char *buf, int count);
 * syscall 3
 *
 * int $write(int fd, char *buf, int count);
 * syscall 4
 */

int num = 5;

void print_int(n) {
    char[10] buffer;
    int i;
    i = 0;
    while (i < 10) {
        buffer[i] = 0;
        i = i + 1;
    }
    if (n < 0)
        $write(1, "-", 1);
    i = 9;
    // conveniently, this prints a zero if
    // n is 0
    while (i >= 0) {
        buffer[i] = n % 10;
        n = n / 10;
        i = i - 1;
        if (n == 0) break;
    }
    $write(1, &buffer[i + 1], 9 - i);
}

void main() {
    int i;
    int r;
    r = 1;
    i = 1;
    while (i <= num) {
        r = r * i;
        i = i + 1;
    }
    print_int(r);
}

// let's say we want to export everything
export print_int();
export main(); // automatically exported
export num;
